#!/usr/bin/env bash

NAME=$1

if [ $# -lt 1 ]; then
    echo "Usage: cgen <project-name>"
    exit 1
fi

mkdir -p "$NAME"/{"src","test"}

cat <<EOF > "$NAME"/Makefile
NAME=$NAME
LIBS=
CFLAGS=-g -Wall \$(LIBS) #-DDEBUG

CC=clang
OUTFILE=bin/\$(NAME)
INFILES=\$(wildcard src/*.c)

\$(NAME):
	set -e; \\
	rm src/*~ src/\#* 2>/dev/null || true; \\
	if [ ! -d bin ]; then mkdir bin; fi; \\
	\$(CC) -o \$(OUTFILE) \$(INFILES) \$(CFLAGS)

clean:	findBin
	@rm -rf bin;

findBin:
	@[ -d bin ];

install:
	@mv bin/\$(NAME) /usr/bin/\$(NAME); \\
	chmod a+x /usr/bin/\$(NAME); \\
	echo "[OK] installed to /usr/bin/\$(NAME)";

check:
	@valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes ./bin/\$(NAME)

trace:
	@strace ./bin/\$(NAME)

all: \$(NAME) findBin install

rebuild: clean \$(NAME) install
EOF

cat <<EOF > "$NAME"/src/main.c
#include "$NAME.h"

int main(int argc, char* argv[]) {

}
EOF


cat <<EOF > "$NAME"/src/"$NAME".c
#include "$NAME.h"
EOF


NAME_UPPER=`echo ${NAME^^} | sed 's/-/_/g'`
cat <<EOF > "$NAME"/src/"$NAME".h
#ifndef ${NAME_UPPER}_H
#define ${NAME_UPPER}_H

#endif /* !${NAME_UPPER}_H */
EOF

cat <<EOF > "$NAME"/.gitignore
**/bin
src/third_party
EOF

clang-format -style="{BasedOnStyle: Google, IndentWidth: 4}" -dump-config > "$NAME"/.clang-format
