#!/usr/bin/env bash

NAME=$1

DOMAIN=com.ddddddeon

if [ $# -lt 1 ]; then
    echo "Usage: cgen <project-name> [--lib]"
    exit 1
fi

LIB=""
if [ ! -z $2 ]; then
    LIB="true"
fi

mvn archetype:generate -DgroupId=$DOMAIN -DartifactId=$NAME -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

if [ -z $LIB ]; then

    cat <<EOF > "$NAME"/Makefile
NAME=$NAME
DOMAIN=$DOMAIN
LIBS=
JAVA_OPTS=
CLASS_DIR=target/classes
SRC_DIR=src
SRC_FILES=\$(wildcard \$(SRC_DIR)/**/*.java)
MANIFEST=manifest.txt

.PHONY: \$(NAME)
\$(NAME): build
	java -jar \$(CLASS_DIR)/\$(NAME).jar

.PHONY: build
build: 
	set -e; \\
	rm \$(SRC_DIR)/*~ \$(SRC_DIR)/\#* 2>/dev/null || true; \\
	if [ ! -d \$(CLASS_DIR) ]; then mkdir -p \$(CLASS_DIR); fi; \\
    mvn compile; \\
	jar cfm \$(CLASS_DIR)/\$(NAME).jar \$(MANIFEST) -C \$(CLASS_DIR)/ .;
EOF

else
    cat <<EOF > "$NAME"/Makefile
NAME=$NAME
DOMAIN=$DOMAIN
LIBS=
JAVA_OPTS=
CLASS_DIR=target/classes
SRC_DIR=src
SRC_FILES=\$(wildcard \$(SRC_DIR)/**/*.java)
MANIFEST=manifest.txt

.PHONY: \$(NAME)
\$(NAME): build
	java -jar \$(CLASS_DIR)/\$(NAME).jar

.PHONY: build
build: 
	set -e; \\
	rm \$(SRC_DIR)/*~ \$(SRC_DIR)/\#* 2>/dev/null || true; \\
	if [ ! -d \$(CLASS_DIR) ]; then mkdir -p \$(CLASS_DIR); fi; \\
    mvn compile; \\
	jar cfm \$(CLASS_DIR)/\$(NAME).jar \$(MANIFEST) -C \$(CLASS_DIR)/ .;
EOF

fi

cat <<EOF > "$NAME"/.gitignore
**/bin
EOF

cat <<EOF > "$NAME"/manifest.txt
Main-Class: com.ddddddeon.App
EOF

cd "$NAME"
mvn wrapper:wrapper
