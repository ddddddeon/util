#!/usr/bin/env bash

NAME=$1

if [ $# -lt 1 ]; then
    echo "Usage: cppgen <project-name>"
    exit 1
fi

mkdir -p "$NAME"/{"src","test"}

cat <<EOF > "$NAME"/Makefile
NAME=$NAME
LIBS=
CFLAGS=-g -Wall -fuse-ld=lld \$(LIBS)

CC=clang++
OUTFILE=bin/\$(NAME)
INFILES=\$(wildcard src/*.cpp)

\$(NAME):
	set -e; \\
	rm src/*~ src/\#* 2>/dev/null || true; \\
	if [ ! -d bin ]; then mkdir bin; fi; \\
	\$(CC) -o \$(OUTFILE) \$(INFILES) \$(CFLAGS)

clean:	find-bin
	@rm -rf bin;

find-bin:
	@[ -d bin ];

install:
	@mv bin/\$(NAME) /usr/bin/\$(NAME); \\
	chmod a+x /usr/bin/\$(NAME); \\
	echo "[OK] installed to /usr/bin/\$(NAME)";

format:
	@clang-format -i -style=google **/*.cpp **/*.h

tidy:
	@clang-tidy --checks=google-* -header-filter=.* **/*.cpp **/*.h

lint:
	@cpplint **/*.cpp **/*.h

check:
	@valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes ./bin/\$(NAME)

trace:
	@strace ./bin/\$(NAME)

sloc:
	@git ls-files | xargs wc -l

all: \$(NAME) find-bin install

rebuild: clean \$(NAME) install
EOF

cat <<EOF > "$NAME"/src/main.cpp
#include "$NAME.h"

using namespace "$NAME";

int main(int argc, char* argv[]) {

}
EOF

cat <<EOF > "$NAME"/src/"$NAME".cpp
#include "$NAME.h"
EOF

cat <<EOF > "$NAME"/src/"$NAME".h
#pragma once
EOF

cat <<EOF > "$NAME"/.gitignore
**/bin
EOF

clang-format -style="{BasedOnStyle: Google, IndentWidth: 4}" -dump-config > "$NAME"/.clang-format
